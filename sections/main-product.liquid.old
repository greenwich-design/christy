{% stylesheet %}
  .image-magnify-full-size {
    position: absolute;
    width: 100%;
    height: 100%;
    inset: 0;
    z-index: 1;
    cursor: zoom-out;
  }
{% endstylesheet %}

{%- capture variant_skus -%}
{%- for variant in product.variants -%}
    {%- if variant.sku != blank -%}
    {{- variant.sku -}}{%- if forloop.last == false -%},{%- endif -%}
    {%- endif -%}
{%- endfor -%}
{%- endcapture -%}

<section
  id='MainProduct-{{ section.id }}'
  class='page-width section-{{ section.id }}-padding'
  data-section='{{ section.id }}'
>
  {% comment %}
    {{ 'component-accordion.css' | asset_url | stylesheet_tag }}
    {{ 'component-price.css' | asset_url | stylesheet_tag }}
    {{ 'component-slider.css' | asset_url | stylesheet_tag }}
    {{ 'component-rating.css' | asset_url | stylesheet_tag }}
    {{ 'component-loading-overlay.css' | asset_url | stylesheet_tag }}
    {{ 'component-deferred-media.css' | asset_url | stylesheet_tag }}
  {% endcomment %}

  <script src='{{ 'product-info.js' | asset_url }}' defer='defer'></script>
  <script src='{{ 'product-form.js' | asset_url }}' defer='defer'></script>
  <script src='{{ 'magnify.js' | asset_url }}' defer='defer'></script>

  {%- if request.design_mode -%}
    <script src='{{ 'theme-editor.js' | asset_url }}' defer='defer'></script>
  {%- endif -%}

  {%- assign first_3d_model = product.media | where: 'media_type', 'model' | first -%}
  {%- if first_3d_model -%}
    {{ 'component-product-model.css' | asset_url | stylesheet_tag }}
    <link
      id='ModelViewerStyle'
      rel='stylesheet'
      href='https://cdn.shopify.com/shopifycloud/model-viewer-ui/assets/v1.0/model-viewer-ui.css'
      media='print'
      onload="this.media='all'"
    >
    <link
      id='ModelViewerOverride'
      rel='stylesheet'
      href='{{ 'component-model-viewer-ui.css' | asset_url }}'
      media='print'
      onload="this.media='all'"
    >
  {%- endif -%}

  {% assign variant_images = product.images | where: 'attached_to_variant?', true | map: 'src' %}

  {% if product.collections.size > 0 %}
    <nav class='breadcrumb container mt-10 mb-12 max-md:hidden'>
      <ul class='flex flex-wrap text-blue-1 gap-1'>
        {% assign collectionsCount = product.collections.size %}
        <li>
          <a href='{{ shop.url }}'>Home</a>
        </li>
        <li>/</li>
        {% for collection in product.collections %}
          <li>
            <a href='{{ collection.url }}'>{{ collection.title }}</a>
            <span>/</span>
          </li>
          {% break %}
        {% endfor %}
        <li class='select-none'>
          <strong>{{ product.title }}</strong>
        </li>
      </ul>
    </nav>
  {% endif %}

  <div class='product md:flex md:space-x-6 md:justify-between container'>
    {% if product.media.size > 0 %}
      <div class='md:w-6/12 hidden md:!block'>
        {% render 'product-media-gallery', variant_images: variant_images %}
      </div>
    {% endif %}

    <div class='product__info-wrapper md:w-5/12 self-start md:sticky md:top-[var(--header-height)] lg:top-[var(--header-height-lg)]'>
      <product-info
        id='ProductInfo-{{ section.id }}'
        data-section='{{ section.id }}'
        data-url='{{ product.url }}'
        class='text-blue-1 space-y-6'
      >
        {%- assign product_form_id = 'product-form-' | append: section.id -%}

        <div>
          {%- unless product.has_only_default_variant -%}
            {%- for option in product.options_with_values -%}
              {%- if option.name == 'Colour' or option.name == 'Color' %}
                <div
                  id='colour-picker-mobile'
                  role='button'
                  class='absolute top-0 left-0 -translate-y-full bg-white/90 container md:hidden invisible opacity-0 transition-[opacity,transform,visibility] duration-500'
                  aria-hidden='true'
                >
                  <div class='flex justify-between py-5 border-b border-blue-1/10 space-x-5'>
                    <div class='flex items-center gap-y-1 gap-3 flex-wrap'>
                      {% render 'product-variant-options',
                        product: product,
                        option: option,
                        block: block,
                        button_type: true,
                        name_custom: 'mob'
                      %}
                    </div>
                    <span class='current-variation font-light whitespace-nowrap'>
                      {{ option.name }}:
                      <strong data-varcurrent='{{ option.name }}'>{{ option.selected_value }}</strong>
                    </span>
                  </div>
                </div>
                {% break %}
              {%- endif -%}
            {%- endfor -%}
          {%- endunless -%}

          <div
            id='product-panel'
            class='max-md:absolute max-md:bg-white/90 transition-colors max-md:left-0 max-md:top-0 max-md:-translate-y-full group-[.init]/product-page:bg-transparent group-[.init]/product-page:max-md:relative group-[.init]/product-page:max-md:-translate-y-0 max-md:px-[40px] max-md:w-full group-[.init]/product-page:max-md:px-0'
          >
            <div class='space-y-3 md:space-y-5'>
              <header class='space-y-2 md:space-y-4'>
                <h1 class='m-h1 lg:s-d-h4'>{{ product.title | escape }}</h1>

                <div class='flex justify-between'>
                  {%- if product.collections.size > 0 -%}
                    {% for collection in product.collections %}
                      <p class='font-semibold lg:d-h5'>{{ collection.title }}</p>
                      {% break %}
                    {% endfor %}
                  {%- endif -%}

                  {%- unless product.has_only_default_variant -%}
                    {%- for option in product.options_with_values -%}
                      {%- if option.name == 'Colour' or option.name == 'Color' %}
                        {% if option.name == 'Colour' %}
                          {% assign colours_size = product.options_with_values
                            | where: 'name', 'Colour'
                            | map: 'values'
                            | first
                            | size
                          %}
                        {% elsif option.name == 'Color' %}
                          {% assign colours_size = product.options_with_values
                            | where: 'name', 'Color'
                            | map: 'values'
                            | first
                            | size
                          %}
                        {% endif %}

                        <div
                          id='colour-picker-mobile-trigger'
                          role='button'
                          class='flex items-center shrink-0 space-x-3 md:hidden'
                          aria-hidden='true'
                          data-togglecolours
                        >
                          <div class='pointer-events-none relative w-[16px] h-[16px] [&_div]:!m-0 [&_button]:absolute [&_button]:left-0 [&_button]:invisible [&_input:checked~button]:visible [&_input:checked~button]:relative'>
                            <div class=''>
                              <div class='flex items-center justify-end'>
                                {% render 'product-variant-options',
                                  product: product,
                                  option: option,
                                  block: block,
                                  button_type: true,
                                  name_custom: 'mob2'
                                %}
                              </div>
                            </div>
                          </div>

                          <p class='btn-tertiary ml-3'>
                            {% if colours_size > 5 %}
                              {{ colours_size }}+ Colours
                            {% else %}
                              {{ colours_size }} Colours
                            {% endif %}
                          </p>
                        </div>
                        {% break %}
                      {%- endif -%}
                    {%- endfor -%}
                  {%- endunless -%}
                </div>
              </header>

              <div class='flex gap-3 justify-between items-center'>
                {% if product.price_min != product.price_max %}
                  <p>
                    Price Range <strong>{{ product.price_min | money }} - {{ product.price_max | money }}</strong>
                  </p>
                {% else %}
                  <p>
                    Price <strong>{{ product.price | money }}</strong>
                  </p>
                {% endif %}

                <!-- TrustBox widget - Product Mini -->
                <div
                  class='trustpilot-widget'
                  data-locale='en-US'
                  data-template-id='54d39695764ea907c0f34825'
                  data-businessunit-id='5c9e0477c7d1190001144cb3'
                  data-style-height='15px'
                  data-style-width='190px'
                  data-theme='light'
                  data-sku='{{ variant_skus }}'
                  data-name='{{ product.title }}'
                  data-scroll-to-list='true'
                  data-style-alignment='center'
                  style='height: 15px;width: 190px;'
                ></div>
                <!-- End TrustBox widget -->
              </div>

              <div class='wysiwyg md:!mt-7 max-md:hidden'>
                {{ product.description }}
              </div>

              {%- unless product.has_only_default_variant -%}
                <div
                  data-moboptions='false'
                  class='max-md:h-0 md:!h-auto overflow-hidden !mt-0 md:!mt-6'
                >
                  <div class='max-md:pt-7'>
                    {% render 'product-variant-picker', product: product, product_form_id: product_form_id %}
                  </div>
                </div>
              {%- endunless -%}

              <div class='!mt-0 md:hidden py-5'>
                {%- render 'buy-buttons',
                  block: block,
                  product: product,
                  product_form_id: product_form_id,
                  section_id: section.id,
                  show_pickup_availability: true
                -%}
              </div>
            </div>
          </div>
        </div>

        <div class='space-y-6'>
          {%- for block in section.blocks -%}
            {%- case block.type -%}
              {%- when '@app' -%}
                {% render block %}
              {%- when 'text' -%}
                <p
                  class='product__text inline-richtext{% if block.settings.text_style == 'uppercase' %} caption-with-letter-spacing{% elsif block.settings.text_style == 'subtitle' %} subtitle{% endif %}'
                  {{ block.shopify_attributes }}
                >
                  {{- block.settings.text -}}
                </p>

              {%- when 'quantity_selector' -%}
                <div
                  id='Quantity-Form-{{ section.id }}'
                  class='product-form__input product-form__quantity{% if settings.inputs_shadow_vertical_offset != 0 and settings.inputs_shadow_vertical_offset < 0 %} product-form__quantity-top{% endif %}'
                  {{ block.shopify_attributes }}
                >
                  {% comment %} TODO: enable theme-check once `item_count_for_variant` is accepted as valid filter {% endcomment %}
                  {% # theme-check-disable %}
                  {%- assign cart_qty = cart
                    | item_count_for_variant: product.selected_or_first_available_variant.id
                  -%}
                  {% # theme-check-enable %}
                  <label class='quantity__label form__label' for='Quantity-{{ section.id }}'>
                    {{ 'products.product.quantity.label' | t }}
                    <span class='quantity__rules-cart no-js-hidden{% if cart_qty == 0 %} hidden{% endif %}'>
                      <span class='loading-overlay hidden'>
                        <span class='loading-overlay__spinner'>
                          <svg
                            aria-hidden='true'
                            focusable='false'
                            class='spinner'
                            viewBox='0 0 66 66'
                            xmlns='http://www.w3.org/2000/svg'
                          >
                            <circle class="path" fill="none" stroke-width="6" cx="33" cy="33" r="30"></circle>
                          </svg>
                        </span>
                      </span>
                      <span
                        >(
                        {{- 'products.product.quantity.in_cart_html' | t: quantity: cart_qty -}}
                        )</span
                      >
                    </span>
                  </label>
                  <quantity-input class='quantity'>
                    <button class='quantity__button no-js-hidden' name='minus' type='button'>
                      <span class='visually-hidden'>
                        {{- 'products.product.quantity.decrease' | t: product: product.title | escape -}}
                      </span>
                      {% render 'icon-minus' %}
                    </button>
                    <input
                      class='quantity__input'
                      type='number'
                      name='quantity'
                      id='Quantity-{{ section.id }}'
                      data-cart-quantity='{{ cart_qty }}'
                      data-min='{{ product.selected_or_first_available_variant.quantity_rule.min }}'
                      min='{{ product.selected_or_first_available_variant.quantity_rule.min }}'
                      {% if product.selected_or_first_available_variant.quantity_rule.max != null %}
                        data-max='{{ product.selected_or_first_available_variant.quantity_rule.max }}'
                        max='{{ product.selected_or_first_available_variant.quantity_rule.max }}'
                      {% endif %}
                      step='{{ product.selected_or_first_available_variant.quantity_rule.increment }}'
                      value='{{ product.selected_or_first_available_variant.quantity_rule.min }}'
                      form='{{ product_form_id }}'
                    >
                    <button class='quantity__button no-js-hidden' name='plus' type='button'>
                      <span class='visually-hidden'>
                        {{- 'products.product.quantity.increase' | t: product: product.title | escape -}}
                      </span>
                      {% render 'icon-plus' %}
                    </button>
                  </quantity-input>
                  <div class='quantity__rules caption no-js-hidden'>
                    {%- if product.selected_or_first_available_variant.quantity_rule.increment > 1 -%}
                      <span class='divider'>
                        {{-
                          'products.product.quantity.multiples_of'
                          | t: quantity: product.selected_or_first_available_variant.quantity_rule.increment
                        -}}
                      </span>
                    {%- endif -%}
                    {%- if product.selected_or_first_available_variant.quantity_rule.min > 1 -%}
                      <span class='divider'>
                        {{-
                          'products.product.quantity.minimum_of'
                          | t: quantity: product.selected_or_first_available_variant.quantity_rule.min
                        -}}
                      </span>
                    {%- endif -%}
                    {%- if product.selected_or_first_available_variant.quantity_rule.max != null -%}
                      <span class='divider'>
                        {{-
                          'products.product.quantity.maximum_of'
                          | t: quantity: product.selected_or_first_available_variant.quantity_rule.max
                        -}}
                      </span>
                    {%- endif -%}
                  </div>
                </div>
              {%- when 'popup' -%}
                <modal-opener
                  class='product-popup-modal__opener no-js-hidden quick-add-hidden'
                  data-modal='#PopupModal-{{ block.id }}'
                  {{ block.shopify_attributes }}
                >
                  <button
                    id='ProductPopup-{{ block.id }}'
                    class='product-popup-modal__button link'
                    type='button'
                    aria-haspopup='dialog'
                  >
                    {{ block.settings.text | default: block.settings.page.title }}
                  </button>
                </modal-opener>
                <a href='{{ block.settings.page.url }}' class='product-popup-modal__button link no-js'>
                  {{- block.settings.text -}}
                </a>
              {%- when 'share' -%}
                {% assign share_url = product.selected_variant.url | default: product.url | prepend: request.origin %}
                {% render 'share-button', block: block, share_link: share_url %}

              {%- when 'buy_buttons' -%}
                <div class='max-md:hidden'>
                  <div class='flex gap-2 flex-wrap'>
                    <div class='flex-[2]'>
                      {%- render 'buy-buttons',
                        block: block,
                        product: product,
                        product_form_id: product_form_id,
                        section_id: section.id,
                        show_pickup_availability: true
                      -%}
                    </div>

                    <div class='flex-1'>
                      <button
                        type='button'
                        aria-label='Add to wishlist'
                        button-wishlist
                        data-product-handle='{{ product.handle }}'
                        class='btn-large btn-secondary [&_path]:!stroke-current [&.active_path]:!stroke-orange-1'
                      >
                        Add to Wishlist <span class='w-[16px] lg:w-[18px] block ml-2'>{% render 'icon-heart' %}</span>
                      </button>
                    </div>
                  </div>
                </div>

              {%- when 'rating' -%}
                {%- if product.metafields.reviews.rating.value != blank -%}
                  {% liquid
                    assign rating_decimal = 0
                    assign decimal = product.metafields.reviews.rating.value.rating | modulo: 1
                    if decimal >= 0.3 and decimal <= 0.7
                      assign rating_decimal = 0.5
                    elsif decimal > 0.7
                      assign rating_decimal = 1
                    endif
                  %}
                  <div
                    class='rating'
                    role='img'
                    aria-label='{{ 'accessibility.star_reviews_info' | t: rating_value: product.metafields.reviews.rating.value, rating_max: product.metafields.reviews.rating.value.scale_max }}'
                  >
                    <span
                      aria-hidden='true'
                      class='rating-star'
                      style='--rating: {{ product.metafields.reviews.rating.value.rating | floor }}; --rating-max: {{ product.metafields.reviews.rating.value.scale_max }}; --rating-decimal: {{ rating_decimal }};'
                    ></span>
                  </div>
                  <p class='rating-text caption'>
                    <span aria-hidden='true'>
                      {{- product.metafields.reviews.rating.value }} /
                      {{ product.metafields.reviews.rating.value.scale_max -}}
                    </span>
                  </p>
                  <p class='rating-count caption'>
                    <span aria-hidden='true'>({{ product.metafields.reviews.rating_count }})</span>
                    <span class='visually-hidden'>
                      {{- product.metafields.reviews.rating_count }}
                      {{ 'accessibility.total_reviews' | t -}}
                    </span>
                  </p>
                {%- endif -%}

              {%- when 'icon-with-text' -%}
                {% render 'icon-with-text', block: block %}
              {%- when 'accordion' %}
                <div
                  class='!my-0 py-5 lg:py-7 border-b border-blue-1/10 group/acc'
                  {{ block.shopify_attributes }}
                  {% if block.settings.for_sizeguide %}
                    data-sizeguide id='sizeguide'
                  {% endif %}
                >
                  <h4
                    data-acc
                    class='font-semibold m-body-copy lg:d-h5 space-x-6 flex w-full items-center cursor-pointer'
                  >
                    <span class='mr-auto'>{{ block.settings.title }}</span>
                    <span
                      class='acc-toggle'
                    ></span>
                  </h4>
                  <div class='gap-3 flex-wrap pt-5 lg:pt-7 clear-left hidden group-[.open]/acc:!flex group-[.open]/acc:opacity-100 opacity-0 transition-opacity delay-[0.5s]'>
                    <div class='wysiwyg flex-1'>
                      {{ block.settings.content }}
                      {{ block.settings.html }}

                      {% if block.settings.button_link and block.settings.button_label %}
                        <div>
                          <a class='btn-tertiary' href='{{ block.settings.button_link }}'>
                            {{- block.settings.button_label -}}
                          </a>
                        </div>
                      {% endif %}
                    </div>
                  </div>
                </div>
              {%- when 'view_size_guide' -%}
                <div id='sideguidewrap' class='text-right hidden max-md:hidden' {{ block.shopify_attributes }}>
                  <a href='#sizeguide' aria-label='Go to sizeguide' class='btn-tertiary' data-sizeguideto
                    >View Size Guide</a
                  >
                </div>
            {%- endcase -%}
          {%- endfor -%}

          {% comment %}
            Specification
          {% endcomment %}
          {% if product.metafields.custom.product_specification != blank %}
            <div
              class='!my-0 py-5 lg:py-7 border-b border-blue-1/10 group/acc'
              data-sizeguide
              id='sizeguide'
            >
              <h4
                data-acc
                class='font-semibold m-body-copy lg:d-h5 space-x-6 flex w-full items-center cursor-pointer'
              >
                <span class='mr-auto'>Specification</span>
                <span
                  class='acc-toggle'
                ></span>
              </h4>
              <div class='gap-3 flex-wrap pt-5 lg:pt-7 clear-left hidden group-[.open]/acc:!flex group-[.open]/acc:opacity-100 opacity-0 transition-opacity delay-[0.5s]'>
                <div class='wysiwyg flex-1'>
                  {{ product.metafields.custom.product_specification }}
                </div>
              </div>
            </div>
          {% endif %}
          {% comment %}
            END Specification
          {% endcomment %}

          {% comment %}
            Reviews
          {% endcomment %}
          <div
            class='!my-0 py-5 lg:py-7 border-b border-blue-1/10 group/acc'
            id='reviews'
          >
            <h4
              data-acc
              class='font-semibold m-body-copy lg:d-h5 space-x-6 flex w-full items-center cursor-pointer'
            >
              <span class='mr-auto'>Reviews</span>
              <span
                class='acc-toggle'
              ></span>
            </h4>
            <div class='gap-3 flex-wrap pt-5 lg:pt-7 clear-left hidden group-[.open]/acc:!flex group-[.open]/acc:opacity-100 opacity-0 transition-opacity delay-[0.5s]'>
              <div class='wysiwyg flex-1'>
                <div
                  class='trustpilot-widget'
                  data-locale='en-US'
                  data-template-id='5763bccae0a06d08e809ecbb'
                  data-businessunit-id='5c9e0477c7d1190001144cb3'
                  data-style-width='100%'
                  data-style-height='500px'
                  data-theme='light'
                  data-sku='{{ variant_skus }}'
                  data-name='{{ product.title }}'
                  data-review-languages='en'
                  data-fullwidth='true'
                >
                  <a href='https://www.trustpilot.com/review/christy.co.uk' target='_blank' rel='noopener'
                    >Trustpilot</a
                  >
                </div>
              </div>
            </div>
          </div>
          {% comment %}
            END Reviews
          {% endcomment %}
        </div>
      </product-info>
    </div>
  </div>

  <script>
    document.addEventListener('DOMContentLoaded', function () {
      const windowHeight = window.innerHeight;
      const el = document.querySelector('#product-page');
      const productPanel = document.querySelector('#product-panel');
      const gallery = document.querySelector('#product-mobile-gallery');
      const productInfoHandle = document.querySelector('#product-info-handle');
      const productInfoWrap = document.querySelector('#product-info-wrap');
      const mobOptions = document.querySelector('[data-moboptions]');
      let mobOptionsHeight = 0;
      if (mobOptions) {
        mobOptionsHeight = mobOptions.offsetHeight;
      }

      let optionsOpen = false;
      function initProd() {
        // add init class
        el.classList.add('init');

        setTimeout(function () {
          el.classList.add('[&.init]:max-md:transition-[transform,background]', 'max-md:!duration-500');
        }, 2);
      }

      initProd();

      // on initial load, get product panel height, and set it as a css variable
      function setPanelHeight() {
        let panelHeight = productPanel.offsetHeight + productInfoHandle.offsetHeight;
        if (panelHeight > el.offsetHeight) {
          panelHeight = el.offsetHeight;
          if (el.dataset.pos == 'bottom' || el.dataset.pos == '') {
            setTimeout(function () {
              setTop();
            }, 501);
          }
        }
        document.documentElement.style.setProperty('--product-panel', panelHeight + 'px');
      }

      setPanelHeight();

      function openOptionsMob() {
        let mobOptions = document.querySelector('[data-moboptions]');
        mobOptions.style.height = 'auto';
        mobOptions.dataset.moboptions = 'true';

        setPanelHeight();
        optionsOpen = true;
        mobOptionsHeight = mobOptions.offsetHeight;
      }

      function closeOptionsMob() {
        let mobOptions = document.querySelector('[data-moboptions]');
        mobOptions.style.height = '0px';
        mobOptions.dataset.moboptions = 'false';

        setPanelHeight();
        optionsOpen = false;
        mobOptionsHeight = mobOptions.offsetHeight;
      }

      if (el && gallery) {
        let moving = false;
        let firstClick = '';
        let startVal = '';
        let startVal2 = '';
        let targetVal = '';
        let notLocked = true;
        let initialClick = '';
        let direction = '';

        function getFirstClick(event) {
          if (event.clientY) {
            initialClick = event.clientY;
          } else if (event.changedTouches) {
            initialClick = event.changedTouches[0].clientY;
          }
        }

        function setTop() {
          //const closeOptionsEvent = new Event('closeoptions');
          // window.dispatchEvent(closeOptionsEvent);

          //const panelheightEvent = new Event('panelheight');
          //window.dispatchEvent(panelheightEvent);

          if (colourPickerMobile) {
            colourPickerMobile.classList.remove('!-translate-y-full');
            colourPickerMobile.classList.remove('!opacity-100');
            colourPickerMobile.classList.remove('!visible');
          }

          setTimeout(function () {
            el.style.transform = 'translateY(-100%)';
            productInfoWrap.classList.add('max-md:!overflow-auto');

            const splideRefresh = new Event('spliderefresh');
            window.dispatchEvent(splideRefresh);
          }, 100);

          notLocked = false;

          el.classList.add('max-md:z-50');

          el.dataset.pos = 'top';
        }

        function setBottom() {
          setTimeout(function () {
            el.style.transform = 'translateY(calc(-0% - var(--product-panel)))';
            productInfoWrap.classList.remove('max-md:!overflow-auto');
          }, 100);

          notLocked = false;

          const closeOptionsEvent = new Event('closeoptions');
          window.dispatchEvent(closeOptionsEvent);

          setTimeout(function () {
            productInfoWrap.scrollTo({
              top: 0,
              left: 0,
              behavior: 'smooth',
            });

            notLocked = true;
            el.classList.remove('max-md:z-50');
            el.dataset.pos = 'bottom';
          }, 501);
        }

        function pickup(event) {
          startVal = '';
          startVal2 = '';
          targetVal = '';
          if (notLocked) {
            moving = true;

            var style = window.getComputedStyle(document.querySelector('#product-page'));
            var matrix = new DOMMatrixReadOnly(style.transform);

            if (event.clientY) {
              firstClick = event.clientY;
              startVal = event.clientY;

              startVal = startVal - matrix.m42;
              startVal2 = event.clientY - startVal;
            } else {
              firstClick = event.changedTouches[0].clientY;
              startVal = event.changedTouches[0].clientY;

              startVal = startVal - matrix.m42;
              startVal2 = event.changedTouches[0].clientY - startVal;
            }
          }
        }

        function drop(event) {
          moving = false;
          // on drop, remove only allow background color to change
          el.classList.remove('max-md:!transition-colors');

          // if targetVal's position is more than 50px of startVal2, close

          if (notLocked) {
            let setPos = false;

            if (targetVal && startVal2) {
              if (targetVal < startVal2 - 50) {
                el.dataset.pos = 'top';
                setPos = true;
              }

              if (targetVal > startVal2 + 50) {
                el.dataset.pos = 'bottom';
                setPos = true;
              }

              if (el.dataset.pos === 'top' && setPos) {
                setTop();
              } else {
                setBottom();
              }
            }
          }
        }

        function move(event) {
          // set direction
          if (event.clientY) {
            if (initialClick > event.clientY) {
              direction = 'down';
            } else {
              direction = 'up';
            }
          } else if (event.changedTouches) {
            if (initialClick > event.changedTouches[0].clientY) {
              direction = 'down';
            } else {
              direction = 'up';
            }
          }

          if (moving && notLocked) {
            // on move, only allow background color to change
            el.classList.add('max-md:!transition-colors');
            productInfoWrap.classList.remove('max-md:!overflow-auto');

            if (event.clientY) {
              // mousemove

              targetVal = event.clientY - startVal;

              // make sure panel doesn't go past bottom of page
              if (
                parseInt(targetVal) * -1 >=
                productPanel.offsetHeight + productInfoHandle.offsetHeight - mobOptionsHeight
              ) {
                if (parseInt(targetVal) * -1 <= el.offsetHeight) {
                  el.style.transform = 'translateY(' + targetVal + 'px)';
                }
              }
            } else {
              // touchmove - assuming a single touchpoint
              targetVal = event.changedTouches[0].clientY - startVal;

              // make sure panel doesn't go past bottom of page
              if (
                parseInt(targetVal) * -1 >=
                productPanel.offsetHeight + productInfoHandle.offsetHeight - mobOptionsHeight
              ) {
                if (parseInt(targetVal) * -1 <= el.offsetHeight) {
                  el.style.transform = 'translateY(' + targetVal + 'px)';
                }
              }
            }
          }
        }

        el.addEventListener('mousedown', pickup);
        el.addEventListener('touchstart', pickup);
        el.addEventListener('mouseup', drop);
        el.addEventListener('touchend', drop);

        window.addEventListener('mousemove', move);
        window.addEventListener('touchmove', move);

        window.addEventListener('mousedown', getFirstClick);
        window.addEventListener('touchstart', getFirstClick);

        window.addEventListener('mouseup', drop);

        function galleryScrollEnd(e) {
          if (gallery) {
            let scrollEnd = gallery.scrollHeight - gallery.offsetHeight - 1;
            let currentScroll = gallery.scrollTop;
            if (currentScroll >= scrollEnd) {
              // scroll hit
              notLocked = false;
              setTop();
            }
          }
        }

        gallery.addEventListener('scroll', galleryScrollEnd);

        // product page scroll
        function touchHandler(e) {
          if (e.target == productInfoHandle && el.dataset.pos === 'top') {
            notLocked = true;
            pickup(e);
            move(e);
          } else {
            // if panel is in top position, and user scrolls up, lock panel, else.. move panel back to bottom position
            if (el.dataset.pos === 'top') {
              if (productInfoWrap.scrollTop > 0 && direction === 'up') {
                notLocked = false;
              } else if (productInfoWrap.scrollTop === 0 && direction === 'up') {
                notLocked = true;
                pickup(e);
                move(e);
              }
            }
          }
        }
        function mouseHandler(e) {
          if (e.target == productInfoHandle && el.dataset.pos === 'top') {
            notLocked = true;
            moving = true;
            pickup(e);
            move(e);
          }
        }
        window.addEventListener('touchmove', touchHandler);
        window.addEventListener('mousedown', mouseHandler);

        window.addEventListener('resize', function () {
          setPanelHeight();
          galleryScrollEnd();
          setBottom();
        });

        window.addEventListener('panelheight', function () {
          setPanelHeight();
        });

        window.addEventListener('openoptions', function () {
          openOptionsMob();
        });

        window.addEventListener('closeoptions', function () {
          closeOptionsMob();
        });
      }

      // mobile option switcher
      const mobOpNavBtns = document.querySelectorAll('#option-nav-mob > a');
      const opFieldsets = document.querySelectorAll('variant-radios fieldset');

      if (mobOpNavBtns.length && opFieldsets) {
        mobOpNavBtns.forEach(function (btn) {
          btn.addEventListener('click', function (e) {
            e.preventDefault();
            let href = btn.getAttribute('href');

            mobOpNavBtns.forEach(function (mobOpNavBtn) {
              mobOpNavBtn.classList.remove('selected-tab');
            });

            btn.classList.add('selected-tab');

            opFieldsets.forEach(function (fs) {
              fs.classList.add('max-md:hidden');
            });

            let thisFs = document.querySelector(href);
            if (thisFs) {
              thisFs.classList.remove('max-md:hidden');
            }

            setPanelHeight();
          });
        });
      }

      // colour picker
      const toggleColours = document.querySelector('[data-togglecolours]');
      const colourPickerMobile = document.querySelector('#colour-picker-mobile');

      if (colourPickerMobile) {
        document.querySelector('#product-page').addEventListener('click', function () {
          colourPickerMobile.classList.remove('!-translate-y-full', '!opacity-100', '!visible');
        });

        colourPickerMobile.addEventListener('click', function (e) {
          e.stopPropagation();
        });

        colourPickerMobile.querySelectorAll('button').forEach((btn) => {
          btn.addEventListener('click', function () {
            setTimeout(function () {
              colourPickerMobile.classList.add('!-translate-y-full', '!opacity-100', '!visible');
            }, 1);
          });
        });

        toggleColours.addEventListener('click', function (e) {
          e.stopPropagation();
          setBottom();
          colourPickerMobile.classList.toggle('!-translate-y-full');
          colourPickerMobile.classList.toggle('!opacity-100');
          colourPickerMobile.classList.toggle('!visible');
        });
      }

      // on click mobile variant buttons
      const variantButtons = document.querySelectorAll('button.variant-button');
      if (variantButtons.length) {
        variantButtons.forEach((btn) => {
          btn.addEventListener('click', function () {
            let forId = btn.dataset.for;
            document.querySelector('#' + forId).click();
          });
        });
      }

      function isIE() {
        const ua = window.navigator.userAgent;
        const msie = ua.indexOf('MSIE ');
        const trident = ua.indexOf('Trident/');

        return msie > 0 || trident > 0;
      }

      if (!isIE()) return;
      const hiddenInput = document.querySelector('#{{ product_form_id }} input[name="id"]');
      const noScriptInputWrapper = document.createElement('div');
      const variantSwitcher =
        document.querySelector('variant-radios[data-section="{{ section.id }}"]') ||
        document.querySelector('variant-selects[data-section="{{ section.id }}"]');
      noScriptInputWrapper.innerHTML = document.querySelector(
        '.product-form__noscript-wrapper-{{ section.id }}'
      ).textContent;
      variantSwitcher.outerHTML = noScriptInputWrapper.outerHTML;

      document.querySelector('#Variants-{{ section.id }}').addEventListener('change', function (event) {
        hiddenInput.value = event.currentTarget.value;
      });
    });
  </script>

  {%- liquid
    if product.selected_or_first_available_variant.featured_media
      assign seo_media = product.selected_or_first_available_variant.featured_media
    else
      assign seo_media = product.featured_media
    endif
  -%}

  <script type='application/ld+json'>
    {
      "@context": "http://schema.org/",
      "@type": "Product",
      "name": {{ product.title | json }},
      "url": {{ request.origin | append: product.url | json }},
      {% if seo_media -%}
        "image": [
          {{ seo_media | image_url: width: 1920 | prepend: "https:" | json }}
        ],
      {%- endif %}
      "description": {{ product.description | strip_html | json }},
      {% if product.selected_or_first_available_variant.sku != blank -%}
        "sku": {{ product.selected_or_first_available_variant.sku | json }},
      {%- endif %}
      "brand": {
        "@type": "Brand",
        "name": {{ product.vendor | json }}
      },
      "offers": [
        {%- for variant in product.variants -%}
          {
            "@type" : "Offer",
            {%- if variant.sku != blank -%}
              "sku": {{ variant.sku | json }},
            {%- endif -%}
            {%- if variant.barcode.size == 12 -%}
              "gtin12": {{ variant.barcode }},
            {%- endif -%}
            {%- if variant.barcode.size == 13 -%}
              "gtin13": {{ variant.barcode }},
            {%- endif -%}
            {%- if variant.barcode.size == 14 -%}
              "gtin14": {{ variant.barcode }},
            {%- endif -%}
            "availability" : "http://schema.org/{% if variant.available %}InStock{% else %}OutOfStock{% endif %}",
            "price" : {{ variant.price | divided_by: 100.00 | json }},
            "priceCurrency" : {{ cart.currency.iso_code | json }},
            "url" : {{ request.origin | append: variant.url | json }}
          }{% unless forloop.last %},{% endunless %}
        {%- endfor -%}
      ]
    }
  </script>
</section>

{% schema %}
{
  "name": "t:sections.main-product.name",
  "tag": "section",
  "class": "section",
  "blocks": [
    {
      "type": "text",
      "name": "t:sections.main-product.blocks.text.name",
      "settings": [
        {
          "type": "inline_richtext",
          "id": "text",
          "default": "Text block",
          "label": "t:sections.main-product.blocks.text.settings.text.label"
        }
      ]
    },

    {
      "type": "view_size_guide",
      "name": "View Size Guide",
      "limit": 1
    },
    {
      "type": "quantity_selector",
      "name": "t:sections.main-product.blocks.quantity_selector.name",
      "limit": 1
    },

    {
      "type": "buy_buttons",
      "name": "t:sections.main-product.blocks.buy_buttons.name",
      "limit": 1,
      "settings": [
        {
          "type": "checkbox",
          "id": "show_dynamic_checkout",
          "default": true,
          "label": "t:sections.main-product.blocks.buy_buttons.settings.show_dynamic_checkout.label",
          "info": "t:sections.main-product.blocks.buy_buttons.settings.show_dynamic_checkout.info"
        },
        {
          "type": "checkbox",
          "id": "show_gift_card_recipient",
          "default": true,
          "label": "t:sections.main-product.blocks.buy_buttons.settings.show_gift_card_recipient.label",
          "info": "t:sections.main-product.blocks.buy_buttons.settings.show_gift_card_recipient.info"
        }
      ]
    },
    {
      "type": "accordion",
      "name": "Accordion",
      "settings": [
        {
          "type": "text",
          "id": "title",
          "default": "Title",
          "label": "Accordion Title",
          "info": "Enter Accordion Title"
        },
        {
          "type": "richtext",
          "id": "content",
          "default": "<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>",
          "label": "Content",
          "info": "Enter Accordion Body Content"
        },
        {
          "type": "html",
          "id": "html",
          "label": "HTML",
          "info": "Used for adding HTML.  A TABLE for example."
        },
        {
          "type": "checkbox",
          "id": "for_sizeguide",
          "default": false,
          "label": "For Size Guide",
          "info": "Check this, if this section is to be used for size guide"
        },
        {
          "type": "header",
          "content": "Button Settings"
        },
        {
          "type": "url",
          "id": "button_link",
          "label": "Link (Optional)",
          "info": "Enter a link, this sits below content"
        },
        {
          "type": "text",
          "id": "button_label",
          "label": "Button Label (Optional)",
          "info": "Enter a label for the button"
        }
      ]
    }
  ],
  "settings": []
}
{% endschema %}
